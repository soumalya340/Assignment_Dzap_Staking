/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DzapNFTStaking,
  DzapNFTStakingInterface,
} from "../DzapNFTStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTUnstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delayPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unbondingPeriod",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedNFTs",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastblock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unbondingEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "untstakingEndBlock",
        type: "uint256",
      },
      {
        internalType: "enum DzapNFTStaking.AssetStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unbondingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unstakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDelayPeriod",
        type: "uint256",
      },
    ],
    name: "updateDelayPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRewardPerBlock",
        type: "uint256",
      },
    ],
    name: "updateRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUnbondingPeriod",
        type: "uint256",
      },
    ],
    name: "updateUnbondingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060016000556080516118bc610043600039600081816110de01528181611107015261124d01526118bc6000f3fe60806040526004361061014b5760003560e01c80638ae39cac116100b6578063c1dfa0bb1161006f578063c1dfa0bb146103fc578063c5662bfa1461041c578063d13f90b41461043c578063d56d229d1461045c578063f2fde38b1461047c578063f7c618c11461049c57600080fd5b80638ae39cac146102b95780638da5cb5b146102cf578063ad3cb1cc14610320578063b1c94d9414610351578063b865749d14610367578063bd9d518b146103cf57600080fd5b806354fd4d501161010857806354fd4d50146102025780636cf6d675146102395780636eb604e01461024f578063715018a61461026f5780637da153df146102845780638456cb59146102a457600080fd5b806301f8a97614610150578063023245d7146101725780630962ef79146101925780633f4ba83a146101b25780634f1ef286146101c757806352d1902d146101da575b600080fd5b34801561015c57600080fd5b5061017061016b366004611540565b6104bc565b005b34801561017e57600080fd5b5061017061018d366004611540565b6104c9565b34801561019e57600080fd5b506101706101ad366004611540565b61068b565b3480156101be57600080fd5b506101706109ea565b6101706101d536600461158b565b6109fe565b3480156101e657600080fd5b506101ef610a1d565b6040519081526020015b60405180910390f35b34801561020e57600080fd5b506040805180820190915260058152640312e302e360dc1b60208201525b6040516101f99190611671565b34801561024557600080fd5b506101ef60055481565b34801561025b57600080fd5b5061017061026a366004611540565b610a3a565b34801561027b57600080fd5b50610170610d1f565b34801561029057600080fd5b5061017061029f366004611540565b610d33565b3480156102b057600080fd5b50610170610d40565b3480156102c557600080fd5b506101ef60035481565b3480156102db57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b0390911681526020016101f9565b34801561032c57600080fd5b5061022c604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561035d57600080fd5b506101ef60045481565b34801561037357600080fd5b506103be610382366004611540565b600760205260009081526040902080546001820154600283015460038401546004909401546001600160a01b0390931693919290919060ff1685565b6040516101f99594939291906116ba565b3480156103db57600080fd5b506101ef6103ea36600461170d565b60086020526000908152604090205481565b34801561040857600080fd5b50610170610417366004611540565b610d57565b34801561042857600080fd5b50610170610437366004611540565b610ea2565b34801561044857600080fd5b50610170610457366004611728565b610eaf565b34801561046857600080fd5b50600154610308906001600160a01b031681565b34801561048857600080fd5b5061017061049736600461170d565b611013565b3480156104a857600080fd5b50600254610308906001600160a01b031681565b6104c461104e565b600355565b600260008281526007602052604090206004015460ff1660038111156104f1576104f16116a4565b146105395760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420617373657420737461746560681b60448201526064015b60405180910390fd5b60008181526007602052604090206002015442101561059a5760405162461bcd60e51b815260206004820152601960248201527f556e626f6e64696e6720706572696f64206e6f74206f766572000000000000006044820152606401610530565b600360008281526007602052604090206004015460ff1660038111156105c2576105c26116a4565b5050600154600082815260076020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050506106463390565b6001600160a01b03167f2aa1b4c95f3b2da9c955947fca584743ea0d457708fadf209c093061e98c4ccb8260405161068091815260200190565b60405180910390a250565b6106936110a9565b60008181526007602052604090205481906001600160a01b031633146106cb5760405162461bcd60e51b815260040161053090611775565b60008281526007602052604081206004015460ff1660038111156106f1576106f16116a4565b036107345760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d081a5cc81b9bdd081cdd185ad959606a1b6044820152606401610530565b6004543360009081526008602052604090205461075191906117d2565b4210156107a05760405162461bcd60e51b815260206004820152601a60248201527f436c61696d2064656c617920706572696f64206e6f74206d65740000000000006044820152606401610530565b6000600160008481526007602052604090206004015460ff1660038111156107ca576107ca6116a4565b141580156107e8575060008381526007602052604090206001015415155b1561083b576000838152600760205260408120600181015460039091015461081091906117e5565b90506003548161082091906117f8565b60008581526007602052604081206001015591506108809050565b60008381526007602052604081206001015461085790436117e5565b90506003548161086791906117f8565b6000858152600760205260409020436001909101559150505b600081116108c65760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606401610530565b6004546108d390426117d2565b33600081815260086020908152604080832094909455600254845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb936044808201949183900301908290875af115801561093d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610961919061180f565b6109a65760405162461bcd60e51b815260206004820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b6044820152606401610530565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250506109e76001600055565b50565b6109f261104e565b6006805460ff19169055565b610a066110d3565b610a0f82611178565b610a198282611180565b5050565b6000610a27611242565b5060008051602061186783398151915290565b60065460ff1615610ab35760405162461bcd60e51b815260206004820152603c60248201527f447a61704e46545374616b696e673a2054686520757365722063616e6e6f742060448201527f70726f63656564202c636f6e7472616374206973205f706175736564000000006064820152608401610530565b60008181526007602052604090205481906001600160a01b03163314610aeb5760405162461bcd60e51b815260040161053090611775565b60008281526007602052604081206004015460ff166003811115610b1157610b116116a4565b1480610b425750600360008381526007602052604090206004015460ff166003811115610b4057610b406116a4565b145b610b9e5760405162461bcd60e51b815260206004820152602760248201527f447a61704e46545374616b696e673a20417373657420697320616c7265616479604482015266081cdd185ad95960ca1b6064820152608401610530565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401600060405180830381600087803b158015610bfe57600080fd5b505af1158015610c12573d6000803e3d6000fd5b505050506040518060a00160405280610c283390565b6001600160a01b03168152436020820152600060408201819052606082015260800160019052600083815260076020908152604091829020835181546001600160a01b0319166001600160a01b03909116178155908301516001808301919091559183015160028201556060830151600380830191909155608084015160048301805493949193909260ff1990911691908490811115610cca57610cca6116a4565b0217905550905050610cd93390565b6001600160a01b03167f0cda5cf38f6592672c7b4a22ff3d50874d1913629bd5ffedc27b7b40503d60fd83604051610d1391815260200190565b60405180910390a25050565b610d2761104e565b610d31600061128b565b565b610d3b61104e565b600555565b610d4861104e565b6006805460ff19166001179055565b610d5f6110a9565b60008181526007602052604090205481906001600160a01b03163314610d975760405162461bcd60e51b815260040161053090611775565b600160008381526007602052604090206004015460ff166003811115610dbf57610dbf6116a4565b14610e175760405162461bcd60e51b815260206004820152602260248201527f447a61704e46545374616b696e673a204e6674206973206e6f74207374616b65604482015261642160f01b6064820152608401610530565b600554610e2490426117d2565b60008381526007602052604090206002810191909155436003808301919091556004909101805460ff19169091179055336001600160a01b03167f963148346e3c93bb3eb4b4c296e2e13321ff22bf1118c91686cb1bfe4adcd91883604051610e8f91815260200190565b60405180910390a2506109e76001600055565b610eaa61104e565b600455565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610ef55750825b905060008267ffffffffffffffff166001148015610f125750303b155b905081158015610f20575080155b15610f3e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610f6857845460ff60401b1916600160401b1785555b610f71336112fc565b610f7961130d565b600180546001600160a01b03808d166001600160a01b031992831617835560028054918d16919092161790556003899055600488905560058790556006805460ff19169091179055831561100757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b61101b61104e565b6001600160a01b03811661104557604051631e4fbdf760e01b815260006004820152602401610530565b6109e78161128b565b336110807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610d315760405163118cdaa760e01b8152336004820152602401610530565b6002600054036110cc57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061115a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661114e600080516020611867833981519152546001600160a01b031690565b6001600160a01b031614155b15610d315760405163703e46dd60e11b815260040160405180910390fd5b6109e761104e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111da575060408051601f3d908101601f191682019092526111d791810190611831565b60015b61120257604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610530565b600080516020611867833981519152811461123357604051632a87526960e21b815260048101829052602401610530565b61123d8383611315565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d315760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61130461136b565b6109e7816113b4565b610d3161136b565b61131e826113bc565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156113635761123d8282611421565b610a19611499565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610d3157604051631afcd79f60e31b815260040160405180910390fd5b61101b61136b565b806001600160a01b03163b6000036113f257604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610530565b60008051602061186783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161143e919061184a565b600060405180830381855af49150503d8060008114611479576040519150601f19603f3d011682016040523d82523d6000602084013e61147e565b606091505b509150915061148e8583836114b8565b925050505b92915050565b3415610d315760405163b398979f60e01b815260040160405180910390fd5b6060826114cd576114c882611517565b611510565b81511580156114e457506001600160a01b0384163b155b1561150d57604051639996b31560e01b81526001600160a01b0385166004820152602401610530565b50805b9392505050565b8051156115275780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561155257600080fd5b5035919050565b80356001600160a01b038116811461157057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561159e57600080fd5b6115a783611559565b9150602083013567ffffffffffffffff808211156115c457600080fd5b818501915085601f8301126115d857600080fd5b8135818111156115ea576115ea611575565b604051601f8201601f19908116603f0116810190838211818310171561161257611612611575565b8160405282815288602084870101111561162b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015611668578181015183820152602001611650565b50506000910152565b602081526000825180602084015261169081604085016020870161164d565b601f01601f19169190910160400192915050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038616815260208101859052604081018490526060810183905260a08101600483106116fd57634e487b7160e01b600052602160045260246000fd5b8260808301529695505050505050565b60006020828403121561171f57600080fd5b61151082611559565b600080600080600060a0868803121561174057600080fd5b61174986611559565b945061175760208701611559565b94979496505050506040830135926060810135926080909101359150565b60208082526027908201527f447a61704e46545374616b696e673a2055736572206973206e6f7420617574686040820152666f72697a65642160c81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611493576114936117bc565b81810381811115611493576114936117bc565b8082028115828204841417611493576114936117bc565b60006020828403121561182157600080fd5b8151801515811461151057600080fd5b60006020828403121561184357600080fd5b5051919050565b6000825161185c81846020870161164d565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220310afc46005f424cfb990954371f4cf5cae55990fb8e14a433e88dc5b5f5db9964736f6c63430008140033";

type DzapNFTStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DzapNFTStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DzapNFTStaking__factory extends ContractFactory {
  constructor(...args: DzapNFTStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DzapNFTStaking";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DzapNFTStaking> {
    return super.deploy(overrides || {}) as Promise<DzapNFTStaking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DzapNFTStaking {
    return super.attach(address) as DzapNFTStaking;
  }
  connect(signer: Signer): DzapNFTStaking__factory {
    return super.connect(signer) as DzapNFTStaking__factory;
  }
  static readonly contractName: "DzapNFTStaking";
  public readonly contractName: "DzapNFTStaking";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DzapNFTStakingInterface {
    return new utils.Interface(_abi) as DzapNFTStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DzapNFTStaking {
    return new Contract(address, _abi, signerOrProvider) as DzapNFTStaking;
  }
}
