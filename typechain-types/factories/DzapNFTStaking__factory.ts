/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DzapNFTStaking,
  DzapNFTStakingInterface,
} from "../DzapNFTStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTUnstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delayPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unbondingPeriod",
        type: "uint256",
      },
    ],
    name: "setContractData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedNFTs",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastblock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unbondingEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "untstakingEndBlock",
        type: "uint256",
      },
      {
        internalType: "enum DzapNFTStaking.AssetStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unbondingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unstakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDelayPeriod",
        type: "uint256",
      },
    ],
    name: "updateDelayPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRewardPerBlock",
        type: "uint256",
      },
    ],
    name: "updateRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUnbondingPeriod",
        type: "uint256",
      },
    ],
    name: "updateUnbondingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161191961003e6000396000818161111d01528181611146015261128c01526119196000f3fe6080604052600436106101665760003560e01c80638456cb59116100d1578063bd9d518b1161008a578063d56d229d11610064578063d56d229d1461046c578063f20eeb371461048c578063f2fde38b146104ac578063f7c618c1146104cc57600080fd5b8063bd9d518b146103ff578063c1dfa0bb1461042c578063c5662bfa1461044c57600080fd5b80638456cb59146102d45780638ae39cac146102e95780638da5cb5b146102ff578063ad3cb1cc14610350578063b1c94d9414610381578063b865749d1461039757600080fd5b806354fd4d501161012357806354fd4d501461021d5780636cf6d675146102545780636eb604e01461026a578063715018a61461028a5780637da153df1461029f5780638129fc1c146102bf57600080fd5b806301f8a9761461016b578063023245d71461018d5780630962ef79146101ad5780633f4ba83a146101cd5780634f1ef286146101e257806352d1902d146101f5575b600080fd5b34801561017757600080fd5b5061018b61018636600461157f565b6104ec565b005b34801561019957600080fd5b5061018b6101a836600461157f565b6104f9565b3480156101b957600080fd5b5061018b6101c836600461157f565b6106a1565b3480156101d957600080fd5b5061018b6109e1565b61018b6101f03660046115c3565b6109f5565b34801561020157600080fd5b5061020a610a14565b6040519081526020015b60405180910390f35b34801561022957600080fd5b506040805180820190915260058152640312e302e360dc1b60208201525b60405161021491906116ab565b34801561026057600080fd5b5061020a60045481565b34801561027657600080fd5b5061018b61028536600461157f565b610a31565b34801561029657600080fd5b5061018b610d93565b3480156102ab57600080fd5b5061018b6102ba36600461157f565b610da7565b3480156102cb57600080fd5b5061018b610db4565b3480156102e057600080fd5b5061018b610ed8565b3480156102f557600080fd5b5061020a60025481565b34801561030b57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b039091168152602001610214565b34801561035c57600080fd5b50610247604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561038d57600080fd5b5061020a60035481565b3480156103a357600080fd5b506103ee6103b236600461157f565b600660205260009081526040902080546001820154600283015460038401546004909401546001600160a01b0390931693919290919060ff1685565b6040516102149594939291906116f4565b34801561040b57600080fd5b5061020a61041a366004611747565b60076020526000908152604090205481565b34801561043857600080fd5b5061018b61044736600461157f565b610eef565b34801561045857600080fd5b5061018b61046736600461157f565b611026565b34801561047857600080fd5b50600054610338906001600160a01b031681565b34801561049857600080fd5b5061018b6104a7366004611764565b611033565b3480156104b857600080fd5b5061018b6104c7366004611747565b611079565b3480156104d857600080fd5b50600154610338906001600160a01b031681565b6104f46110b7565b600255565b600260008281526006602052604090206004015460ff166003811115610521576105216116de565b146105695760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420617373657420737461746560681b60448201526064015b60405180910390fd5b6000818152600660205260409020600201544210156105ca5760405162461bcd60e51b815260206004820152601960248201527f556e626f6e64696e6720706572696f64206e6f74206f766572000000000000006044820152606401610560565b6000818152600660205260408082206004808201805460ff191660031790559254905491516323b872dd60e01b815230938101939093526001600160a01b0391821660248401526044830184905216906323b872dd90606401600060405180830381600087803b15801561063d57600080fd5b505af1158015610651573d6000803e3d6000fd5b5050505061065c3390565b6001600160a01b03167f2aa1b4c95f3b2da9c955947fca584743ea0d457708fadf209c093061e98c4ccb8260405161069691815260200190565b60405180910390a250565b60008181526006602052604090205481906001600160a01b031633146106d95760405162461bcd60e51b8152600401610560906117b5565b60008281526006602052604081206004015460ff1660038111156106ff576106ff6116de565b036107425760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d081a5cc81b9bdd081cdd185ad959606a1b6044820152606401610560565b6003543360009081526007602052604090205461075f9190611812565b4210156107ae5760405162461bcd60e51b815260206004820152601a60248201527f436c61696d2064656c617920706572696f64206e6f74206d65740000000000006044820152606401610560565b6000600160008481526006602052604090206004015460ff1660038111156107d8576107d86116de565b141580156107f6575060008381526006602052604090206001015415155b15610849576000838152600660205260408120600181015460039091015461081e9190611825565b90506002548161082e9190611838565b600085815260066020526040812060010155915061088e9050565b6000838152600660205260408120600101546108659043611825565b9050600254816108759190611838565b6000858152600660205260409020436001909101559150505b600081116108d45760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606401610560565b336000818152600760209081526040808320429055600154815163a9059cbb60e01b815260048101959095526024850186905290516001600160a01b039091169363a9059cbb93604480830194939283900301908290875af115801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061184f565b6109a75760405162461bcd60e51b815260206004820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b6044820152606401610560565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a2505050565b6109e96110b7565b6005805460ff19169055565b6109fd611112565b610a06826111b7565b610a1082826111bf565b5050565b6000610a1e611281565b506000805160206118c483398151915290565b60055460ff1615610aaa5760405162461bcd60e51b815260206004820152603b60248201527f447a61704e46545374616b696e673a2054686520757365722063616e6e6f742060448201527f70726f636565642c20636f6e74726163742069732070617573656400000000006064820152608401610560565b60008181526006602052604081206004015460ff166003811115610ad057610ad06116de565b1480610b015750600360008281526006602052604090206004015460ff166003811115610aff57610aff6116de565b145b610b5d5760405162461bcd60e51b815260206004820152602760248201527f447a61704e46545374616b696e673a20417373657420697320616c7265616479604482015266081cdd185ad95960ca1b6064820152608401610560565b336000546040516331a9108f60e11b8152600481018490526001600160a01b039283169290911690636352211e90602401602060405180830381865afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf9190611871565b6001600160a01b031614610c1e5760405162461bcd60e51b8152602060048201526016602482015275155cd95c881a5cc81b9bdd08185d5d1a1bdc9a5e995960521b6044820152606401610560565b6000546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101849052606401600060405180830381600087803b158015610c7e57600080fd5b505af1158015610c92573d6000803e3d6000fd5b505050506040518060a00160405280610ca83390565b6001600160a01b03168152436020820152600060408201819052606082015260800160019052600082815260066020908152604091829020835181546001600160a01b0319166001600160a01b03909116178155908301516001808301919091559183015160028201556060830151600380830191909155608084015160048301805493949193909260ff1990911691908490811115610d4a57610d4a6116de565b0217905550905050610d593390565b6001600160a01b03167f0cda5cf38f6592672c7b4a22ff3d50874d1913629bd5ffedc27b7b40503d60fd8260405161069691815260200190565b610d9b6110b7565b610da560006112ca565b565b610daf6110b7565b600455565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610dfa5750825b905060008267ffffffffffffffff166001148015610e175750303b155b905081158015610e25575080155b15610e435760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610e6d57845460ff60401b1916600160401b1785555b610e763361133b565b610e7e61134c565b6005805460ff191660011790558315610ed157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b610ee06110b7565b6005805460ff19166001179055565b60008181526006602052604090205481906001600160a01b03163314610f275760405162461bcd60e51b8152600401610560906117b5565b600160008381526006602052604090206004015460ff166003811115610f4f57610f4f6116de565b14610fa75760405162461bcd60e51b815260206004820152602260248201527f447a61704e46545374616b696e673a204e6674206973206e6f74207374616b65604482015261642160f01b6064820152608401610560565b600454610fb49042611812565b6000838152600660205260409020600280820192909255436003820155600401805460ff19169091179055336001600160a01b03167f963148346e3c93bb3eb4b4c296e2e13321ff22bf1118c91686cb1bfe4adcd9188360405161101a91815260200190565b60405180910390a25050565b61102e6110b7565b600355565b61103b6110b7565b600080546001600160a01b039687166001600160a01b0319918216179091556001805495909616941693909317909355600255600391909155600455565b6110816110b7565b6001600160a01b0381166110ab57604051631e4fbdf760e01b815260006004820152602401610560565b6110b4816112ca565b50565b336110e97f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610da55760405163118cdaa760e01b8152336004820152602401610560565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061119957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661118d6000805160206118c4833981519152546001600160a01b031690565b6001600160a01b031614155b15610da55760405163703e46dd60e11b815260040160405180910390fd5b6110b46110b7565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611219575060408051601f3d908101601f191682019092526112169181019061188e565b60015b61124157604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610560565b6000805160206118c4833981519152811461127257604051632a87526960e21b815260048101829052602401610560565b61127c8383611354565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610da55760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6113436113aa565b6110b4816113f3565b610da56113aa565b61135d826113fb565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156113a25761127c8282611460565b610a106114d8565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610da557604051631afcd79f60e31b815260040160405180910390fd5b6110816113aa565b806001600160a01b03163b60000361143157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610560565b6000805160206118c483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161147d91906118a7565b600060405180830381855af49150503d80600081146114b8576040519150601f19603f3d011682016040523d82523d6000602084013e6114bd565b606091505b50915091506114cd8583836114f7565b925050505b92915050565b3415610da55760405163b398979f60e01b815260040160405180910390fd5b60608261150c5761150782611556565b61154f565b815115801561152357506001600160a01b0384163b155b1561154c57604051639996b31560e01b81526001600160a01b0385166004820152602401610560565b50805b9392505050565b8051156115665780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561159157600080fd5b5035919050565b6001600160a01b03811681146110b457600080fd5b634e487b7160e01b600052604160045260246000fd5b600080604083850312156115d657600080fd5b82356115e181611598565b9150602083013567ffffffffffffffff808211156115fe57600080fd5b818501915085601f83011261161257600080fd5b813581811115611624576116246115ad565b604051601f8201601f19908116603f0116810190838211818310171561164c5761164c6115ad565b8160405282815288602084870101111561166557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156116a257818101518382015260200161168a565b50506000910152565b60208152600082518060208401526116ca816040850160208701611687565b601f01601f19169190910160400192915050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038616815260208101859052604081018490526060810183905260a081016004831061173757634e487b7160e01b600052602160045260246000fd5b8260808301529695505050505050565b60006020828403121561175957600080fd5b813561154f81611598565b600080600080600060a0868803121561177c57600080fd5b853561178781611598565b9450602086013561179781611598565b94979496505050506040830135926060810135926080909101359150565b60208082526027908201527f447a61704e46545374616b696e673a2055736572206973206e6f7420617574686040820152666f72697a65642160c81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808201808211156114d2576114d26117fc565b818103818111156114d2576114d26117fc565b80820281158282048414176114d2576114d26117fc565b60006020828403121561186157600080fd5b8151801515811461154f57600080fd5b60006020828403121561188357600080fd5b815161154f81611598565b6000602082840312156118a057600080fd5b5051919050565b600082516118b9818460208701611687565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220a39815279106079763179bf59ed61438de612594f775cc793c40c999a6a3c14664736f6c63430008140033";

type DzapNFTStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DzapNFTStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DzapNFTStaking__factory extends ContractFactory {
  constructor(...args: DzapNFTStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DzapNFTStaking";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DzapNFTStaking> {
    return super.deploy(overrides || {}) as Promise<DzapNFTStaking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DzapNFTStaking {
    return super.attach(address) as DzapNFTStaking;
  }
  connect(signer: Signer): DzapNFTStaking__factory {
    return super.connect(signer) as DzapNFTStaking__factory;
  }
  static readonly contractName: "DzapNFTStaking";
  public readonly contractName: "DzapNFTStaking";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DzapNFTStakingInterface {
    return new utils.Interface(_abi) as DzapNFTStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DzapNFTStaking {
    return new Contract(address, _abi, signerOrProvider) as DzapNFTStaking;
  }
}
